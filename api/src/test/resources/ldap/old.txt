<!-- Authentication manager 
    <authentication-manager alias="authenticationManager">
            <ldap-authentication-provider group-search-filter="member={0}" group-search-base="ou=groups" user-search-base="ou=people" user-search-filter="uid={0}" server-ref="contextSource" user-context-mapper-ref="com.abiquo.api.spring.security.AbiquoUserDetails"/>
    </authentication-manager>
    -->

    <!-- Embedded server -->
<!--

        Usernames/Passwords are
        rod/koala
        dianne/emu
        scott/wombat
    
-->
    <ldap-server id="embedded" port="9800" ldif="classpath:users.ldif"/>
    <!-- <ldap-server root="dc=springframework,dc=org"/> -->


    <!-- 
    <ldap-authentication-provider group-search-filter="member={0}" group-search-base="ou=groups" user-search-base="ou=people" user-search-filter="uid={0}"/>
     -->
    <!-- Scenarios -->
    
    <!-- Bind authentication 
    <ldap-authentication-provider user-dn-pattern="uid={0},ou=people"/>
    -->
   
    <!-- Password authentication 
    <ldap-authentication-provider user-search-filter="(uid={0})" user-search-base="ou=people"/>
    -->
    
    <!-- Loading Authorities -->
    <!-- Loads user groups 
    <ldap-authentication-provider user-dn-pattern="uid={0},ou=people" group-search-base="ou=groups" />
    -->
    
    <!-- attribute which contains the name of the authority defined by the group entry. Defaults to cn 
    <ldap-authentication-provider user-dn-pattern="uid={0},ou=people" group-role-attribute="ou=groups" />
    -->
    
    <!-- Group membership The default is uniqueMember={0}, corresponding to the groupOfUniqueMembers LDAP class. In this case, the substituted parameter is the full distinguished name of the user. The parameter {1} can be used if you want to filter on the login name. 
    <ldap-authentication-provider user-dn-pattern="uid={0},ou=people" group-search-filter="ou=groups" />
    -->
    
    <!-- Actual beans -->
    <beans:bean id="userDetailsContextMapper" class="com.abiquo.api.spring.security.AbiquoUserDetails" />
    
    <beans:bean id="contextSource"
        class="org.springframework.security.ldap.DefaultSpringSecurityContextSource">
      <beans:constructor-arg ref="embedded" />
      <beans:property name="userDn" value="cn=manager,dc=springframework,dc=org"/>
      <beans:property name="password" value="password"/>
    </beans:bean>
    
    <beans:bean id="ldapAuthProvider"
            class="org.springframework.security.providers.ldap.LdapAuthenticationProvider">
      <beans:constructor-arg>
        <beans:bean class="org.springframework.security.providers.ldap.authenticator.BindAuthenticator">
          <beans:constructor-arg ref="contextSource"/>
          <beans:property name="userDnPatterns">
               <beans:list>
                   <beans:value>uid={0},ou=people</beans:value>
               </beans:list>
          </beans:property>
        </beans:bean>
      </beans:constructor-arg>
      <beans:constructor-arg>
        <beans:bean class="org.springframework.security.ldap.populator.DefaultLdapAuthoritiesPopulator">
          <beans:constructor-arg ref="contextSource"/>
          <beans:constructor-arg value="ou=groups"/>
          <beans:property name="groupRoleAttribute" value="ou"/>
        </beans:bean>
      </beans:constructor-arg>
      <beans:property name="userDetailsContextMapper" />
    </beans:bean>
    
    <!-- User search -->
    <beans:bean id="userSearch"
        class="org.springframework.security.ldap.search.FilterBasedLdapUserSearch">
      <beans:constructor-arg index="0" value=""/>
      <beans:constructor-arg index="1" value="(uid={0})"/>
      <beans:constructor-arg index="2" ref="contextSource" />
    </beans:bean>       
      