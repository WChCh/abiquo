# test
test.name=026_ENTERPRISE_LIMIT_CPU
test.description=Checking enterprise limits

#creating a physical infrastructure
# -datacenters
dc1

# -racks
dc1.r1
dc1.r2

# -Machines
dc1.r1.m1:VMX_04,20,20,200
dc1.r2.m2:VMX_04,30,30,200
dc1.r2.m3:VMX_04,30,30,200

#creating virtual infrastructure
# -enterprise
e1
e2

# -virtual image
e1.vi1:dc1,2,2,2
e1.vi2:dc1,2,2,2
e2.vi3:dc1,2,2,2
e2.vi4:dc1,2,2,2


# -virtual datacenter
e1.vdc1:dc1,VMX_04
e2.vdc2:dc1,VMX_04

# -virtual appliances
e1.vdc1.va1
e1.vdc1.va2
#e2.vdc2.va3
#e2.vdc2.va4

# -virtual machine
e1.vdc1.va1.vm1:vi1
e1.vdc1.va1.vm2:vi2
e1.vdc1.va1.vm3:vi3
e1.vdc1.va2.vm4:vi4
e1.vdc1.va2.vm5:vi4
e1.vdc1.va2.vm6:vi4
e1.vdc1.va2.vm7:vi4

#Rules
# -Minimal set of rules
rule.fit.default:PROGRESSIVE # This one is mandatory

# -Limits
limit.e1:cpu[5,10] 		#limiting enterprise to 5 soft and 8 hardlimit

#Actions
action.allocate.vm1=m1 				# 2 cpu required by e1
action.allocate.vm2=m1				# 4 cpu required by e1
action.allocate.vm3=m1:soft.cpu			# 6 cpu required by e1. Soft limit!
action.allocate.vm4=m1:soft.cpu 		# 8 cpu required by e1. Soft limit! 
action.allocate.vm5=no_resource:hard.cpu	# 10 cpu required by e1. Hard limit!
action.allocate.vm6=no_resource:hard.cpu	# no more resources. Limits exceeded.


