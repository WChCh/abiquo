<?xml version="1.0" encoding="utf-8"?>
<!--

     Abiquo community edition
     cloud management application for hybrid clouds
     Copyright (C) 2008-2010 - Abiquo Holdings S.L.

     This application is free software; you can redistribute it and/or
     modify it under the terms of the GNU LESSER GENERAL PUBLIC
     LICENSE as published by the Free Software Foundation under
     version 3 of the License

     This software is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
     LESSER GENERAL PUBLIC LICENSE v.3 for more details.

     You should have received a copy of the GNU Lesser General Public
     License along with this library; if not, write to the
     Free Software Foundation, Inc., 59 Temple Place - Suite 330,
     Boston, MA 02111-1307, USA.

-->

<mx:VBox 
    width="100%" height="100%"
    horizontalAlign="left"
    verticalGap="2"
    paddingTop="10"
    verticalAlign="middle"
    creationComplete="onCreationComplete()"
    xmlns:mx="http://www.adobe.com/2006/mxml"
    xmlns:utils="net.undf.abicloud.utils.*"
    xmlns:general="net.undf.abicloud.view.general.*">

    <mx:Script>
        <![CDATA[
        	import net.undf.abicloud.utils.AbicloudUtils;
        	import mx.core.UIComponent;
        	import mx.managers.DragManager;
        	import mx.controls.Image;
        	import mx.core.DragSource;
        	import mx.events.DragEvent;
            import mx.collections.ArrayCollection;
            import mx.controls.Alert;
            import mx.core.Application;
            import mx.events.CloseEvent;
            import mx.managers.PopUpManager;
            import mx.resources.ResourceManager;

            import net.undf.abicloud.events.NetworkingEvent;
            import net.undf.abicloud.model.AbiCloudModel;
            import net.undf.abicloud.view.general.AbiCloudAlert;
            import net.undf.abicloud.vo.infrastructure.VirtualMachine;
            import net.undf.abicloud.vo.networking.IPAddress;
            import net.undf.abicloud.vo.networking.IPPoolManagement;
            import net.undf.abicloud.vo.virtualappliance.NodeVirtualImage;
            import net.undf.abicloud.vo.virtualappliance.VirtualDataCenter;

            //The VirtualMachine to manage its Network
            [Bindable]
            protected var _virtualMachine:VirtualMachine;

            //The VirtualDatacenter where the VirtualMachine is
            [Bindable]
            protected var _virtualDatacenter:VirtualDataCenter;

            //Flag indicating if changes can be made to the VirtualMachine network configuration
            [Bindable]
            private var _isEditionAllowed:Boolean;           

            override protected function createChildren():void
            {
                super.createChildren();
            }

            private function onCreationComplete():void
            {
                //Listening for updated from Model
                
            }

            /**
             * Initializes this component to manage the Network of a Virtual Machine
             */
            public function init(node:NodeVirtualImage, isEditionAllowed:Boolean,
                                 virtualDatacenter:VirtualDataCenter):void
            {
                _virtualMachine = node.virtualMachine;
                _virtualDatacenter = virtualDatacenter;
                _isEditionAllowed = isEditionAllowed;

                if (_virtualMachine)
                {
                    
                }
            }

           
           
        ]]>
    </mx:Script>

    <mx:Form paddingTop="3">

        <mx:FormItem 
            height="17"
            label="@Resource(bundle='Infrastructure', key='TEXTINPUT_LABEL_UUID')">
            <mx:Label 
                text="{_virtualMachine.UUID}" selectable="true"
                truncateToFit="true"/>
        </mx:FormItem>

        <mx:FormItem 
            height="17"
            label="@Resource(bundle='Infrastructure', key='TEXTINPUT_LABEL_VIRTUALIMAGE')">
            <mx:Label text="{_virtualMachine.virtualImage.name}"/>
        </mx:FormItem>

        <mx:FormItem 
            height="17"
            label="@Resource(bundle='Infrastructure', key='LABEL_OWNER')">
            <mx:Label text="{this._virtualMachine.enterprise.name}"/>
        </mx:FormItem>

        <mx:FormItem 
            height="17"
            label="@Resource(bundle='Infrastructure', key='TEXTINPUT_LABEL_CPU')"
            direction="horizontal">

            <!-- CPU IS ONLY EDITABLE WHEN THE VIRTUAL MACHINE IS NOT RUNNING -->
            <mx:NumericStepper id="cpuInput"
                width="75" height="17"
                fontSize="10"
                minimum="1" maximum="32" stepSize="1"/>
        </mx:FormItem>

        <mx:FormItem 
            height="17"
            label="@Resource(bundle='Infrastructure', key='TEXTINPUT_LABEL_RAM')"
            direction="horizontal">
     
            <!-- RAM IS ONLY EDITABLE WHEN THE VIRTUAL MACHINE IS NOT RUNNING -->
            <mx:NumericStepper id="ramInput"
                width="75" height="17"
                fontSize="10"
                minimum="0"
                maximum="{ramUnitsSelector.selectedItem.maximum}"
                stepSize="{ramUnitsSelector.selectedItem.stepSize}"
                value="{this._virtualMachine.ram / ramUnitsSelector.selectedItem.conversion}"/>

            <mx:ComboBox id="ramUnitsSelector"
                width="80" height="17"
                labelField="label"
                dataProvider="{AbiCloudModel.ramUnitsSelectorDP}"
                selectedIndex="0"/>
        </mx:FormItem>

        <mx:FormItem 
            height="17"
            label="@Resource(bundle='Infrastructure', key='TEXTINPUT_LABEL_HD')"
            direction="horizontal">

            <mx:Label id="hdLabel"
                text="{Number(_virtualMachine.hd / AbiCloudModel.GB_TO_BYTES).toFixed(2).toString() + ' GB'}"/>

        </mx:FormItem>

        <mx:FormItem 
            height="17"
            label="@Resource(bundle='Infrastructure', key='LABEL_REMOTE_ACCESS')"
            visible="{AbiCloudModel.getInstance().configurationManager.config.client_virtual_allowVMRemoteAccess.value == 1}"
            includeInLayout="{AbiCloudModel.getInstance().configurationManager.config.client_virtual_allowVMRemoteAccess.value == 1}"
            direction="horizontal">
            <mx:Label id="remoteAccessLabel"
                text="{this._virtualMachine.vdrpIP == null}"/>

            <mx:Button id="copyRemoteAccessAddressButton"
                height="16"
                label="@Resource(bundle='Common', key='BUTTON_COPY_CLIPBOARD')"
                includeInLayout="false"
                visible="false"/>
        </mx:FormItem>
                   
		<mx:FormItem 
            height="17"
            label="@Resource(bundle='Infrastructure', key='LABEL_DESCRIPTION')"
            direction="horizontal">

            <mx:TextArea id="descriptionInput"
                            width="100%"
                            maxChars="255"
                            text="{_virtualMachine.description}"/>

        </mx:FormItem>
                   
    </mx:Form>


</mx:VBox>
