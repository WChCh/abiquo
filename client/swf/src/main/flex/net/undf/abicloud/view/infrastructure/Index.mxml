<?xml version="1.0" encoding="utf-8"?>
<!--

     Abiquo community edition
     cloud management application for hybrid clouds
     Copyright (C) 2008-2010 - Abiquo Holdings S.L.

     This application is free software; you can redistribute it and/or
     modify it under the terms of the GNU LESSER GENERAL PUBLIC
     LICENSE as published by the Free Software Foundation under
     version 3 of the License

     This software is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
     LESSER GENERAL PUBLIC LICENSE v.3 for more details.

     You should have received a copy of the GNU Lesser General Public
     License along with this library; if not, write to the
     Free Software Foundation, Inc., 59 Temple Place - Suite 330,
     Boston, MA 02111-1307, USA.

-->

<mx:Canvas 
    width="100%" height="100%"
    xmlns:mx="http://www.adobe.com/2006/mxml"
    xmlns:infrastructure="net.undf.abicloud.view.infrastructure.*"
    implements="net.undf.abicloud.view.main.IBodyComponent"
    xmlns:abicloudblind="net.undf.abicloud.view.general.abicloudblind.*">

    <mx:Script>
        <![CDATA[
            import mx.events.ItemClickEvent;
            import mx.resources.ResourceBundle;

            import net.undf.abicloud.events.MainEvent;
            import net.undf.abicloud.vo.infrastructure.DataCenter;

            private var infrastructureManagement:InfrastructureManagement;

            //Loading the ResourceBundle for infrastructure
            [ResourceBundle("Infrastructure")]
            private var rb:ResourceBundle;

            private var _isShowing:Boolean = false;

            override protected function createChildren():void
            {
                super.createChildren();

                //InfrastructureManagement will be opened using an AbiCloudBlind
                infrastructureManagement = new InfrastructureManagement();
                infrastructureManagement.percentWidth = 100;
                infrastructureManagement.percentHeight = 100;
            }

            /////////////////////////////////////
            //IBodyComponent implementation

            public function bodyComponentWillChange():void
            {
                this._isShowing = false;

                //Clean DataCentersManagement component
                dataCentersManagement.willHide();
                dataCentersManagement.cleanView();

                //Hide InfrastructureManagement, if opened
                if (abicloudBlind.isBlindOpened)
                    abicloudBlind.closeBlind();
                else
                {
                    //Announcing we are ready to be changed
                    var mainEvent:MainEvent = new MainEvent(MainEvent.IBODYCOMPONENT_READY_TO_BE_CHANGED);
                    dispatchEvent(mainEvent);
                }
            }

            public function bodyComponentWillShow():void
            {
                this._isShowing = true;
                dataCentersManagement.willShow();
            }

            /////////// END IBodyComponent implementation ////////////////


            /**
             * Tiggered when user selects a Data Center
             * We have to access to its infrastructure
             **/
            private function onDataCenterSelected(event:ItemClickEvent):void
            {
                //Assign to infrastructureManagement the selected datacenter
                infrastructureManagement.dataCenter = event.item as DataCenter;

                //Open InfrastructureManagement inside an AbiCloudBlind
                abicloudBlind.openBlind(infrastructureManagement, true);
            }

            /**
             * Handler called when InfrastructureManagement is shown
             * using an AbiCloudBlind component
             */
            private function onBlindOpened():void
            {
                dataCentersManagement.willHide();

                //InfrastructureManagement is ready to be shown
                infrastructureManagement.willShow();
            }

            /**
             * Handler called when the blind that contains our InfrastructureManagement
             * is closed
             */
            private function onBlindClosed():void
            {
                infrastructureManagement.willHide();
                infrastructureManagement.cleanView();

                if (this._isShowing)
                    dataCentersManagement.willShow();
                else
                {
                    //Announcing we are ready to be changed
                    var mainEvent:MainEvent = new MainEvent(MainEvent.IBODYCOMPONENT_READY_TO_BE_CHANGED);
                    dispatchEvent(mainEvent);
                }
            }
        ]]>
    </mx:Script>


    <!-- DataCenter Management -->
    <infrastructure:DataCenterManagement id="dataCentersManagement"
        dataCenterSelected="onDataCenterSelected(event)"/>

    <!-- AbiCloudBlind, to open the Infrastructure Management -->
    <abicloudblind:AbiCloudBlind id="abicloudBlind"
        left="5" right="5" top="0" bottom="5"
        blindOpened="onBlindOpened()"
        blindClosed="onBlindClosed()"/>

</mx:Canvas>
