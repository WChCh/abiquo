<?xml version="1.0" encoding="utf-8"?>
<!--

     Abiquo community edition
     cloud management application for hybrid clouds
     Copyright (C) 2008-2010 - Abiquo Holdings S.L.

     This application is free software; you can redistribute it and/or
     modify it under the terms of the GNU LESSER GENERAL PUBLIC
     LICENSE as published by the Free Software Foundation under
     version 3 of the License

     This software is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
     LESSER GENERAL PUBLIC LICENSE v.3 for more details.

     You should have received a copy of the GNU Lesser General Public
     License along with this library; if not, write to the
     Free Software Foundation, Inc., 59 Temple Place - Suite 330,
     Boston, MA 02111-1307, USA.

-->

<general:AbiCloudPopUp 
    resizeEffect="{myResize}"
    xmlns:mx="http://www.adobe.com/2006/mxml"
    xmlns:general="net.undf.abicloud.view.general.*"
    wikiUrl="{AbiCloudModel.getInstance().configurationManager.config.client_wiki_infra_editDatacenter.value}"
    titleText="@Resource(bundle='Infrastructure', key='POPUP_TITLE_DATACENTEREDIT')">

    <mx:Metadata>
		[Event(name="DatacenterFormEditClose", type="flash.events.Event")]
	</mx:Metadata>

    <mx:Script>
        <![CDATA[
        	import net.undf.abicloud.model.AbiCloudModel;
            import mx.managers.PopUpManager;
            import mx.resources.ResourceManager;

            import net.undf.abicloud.vo.infrastructure.DataCenter;


            //DatacenterFormEdit components
            private var _datacenterFormEditBasic:DatacenterFormEditBasic;

            private var _remoteServiceManagement:RemoteServiceManagement;

            /**
             * Initializes this component to manage and edit an existing Datacenter
             */
            public function init(datacenter:DataCenter):void
            {
                trace(datacenter.name);
                this._datacenterFormEditBasic.datacenter = datacenter;
                this._remoteServiceManagement.datacenter = datacenter;

                toggledContainer.selectedIndex = 0;
            }

            override protected function createChildren():void
            {
                super.createChildren();

                //Create the diferent sections
                this._datacenterFormEditBasic = new DatacenterFormEditBasic();
                toggledContainer.addContent(this._datacenterFormEditBasic, ResourceManager.getInstance().getString('Infrastructure',
                                                                                                                   'LABEL_GENERAL'));

                this._remoteServiceManagement = new RemoteServiceManagement();
                toggledContainer.addContent(this._remoteServiceManagement, ResourceManager.getInstance().getString('Infrastructure',
                                                                                                                   'LABEL_REMOTE_SERVICES'));
            }

            private function close():void
            {
                dispatchEvent(new Event("DatacenterFormEditClose"));
            }

            /**
             * To hide contents when a resize effect starts. For performance purposes
             */
            private function onResizeEffectStart():void
            {
                toggledContainer.visible = false;
            }

            /**
             * While resizing, we keep the PopUp centered
             */
            private function onResizeEffectUpdate():void
            {
                PopUpManager.centerPopUp(this);
            }

            /**
             * To hide contents when a resize effect ends. For performance purposes
             */
            private function onResizeEffectEnd():void
            {
                toggledContainer.visible = true;
            }
        ]]>
    </mx:Script>

    <mx:Resize id="myResize"
        duration="800"
        heightTo="{toggledContainer.viewStack.selectedChild.explicitHeight}"
        widthTo="{toggledContainer.viewStack.selectedChild.explicitWidth}"
        tweenStart="onResizeEffectStart()"
        tweenUpdate="onResizeEffectUpdate()"
        tweenEnd="onResizeEffectEnd()"/>

    <general:GeneralToggledContainer id="toggledContainer"
        width="100%" height="100%"/>

    <mx:Button id="closeButton"
        height="18"
        label="@Resource(bundle='Common', key='BUTTON_CLOSE')"
        styleName="AlternativeButton"
        click="close()"/>

    <mx:Spacer height="5"/>

</general:AbiCloudPopUp>
